# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: $(SUBSCRIPTION_UUID)

  # Web app name
  webAppName: $(WEB_APP_NAME)

  # Environment name
  environmentName: $(WEB_APP_NAME)

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Node.js Version
  nodeJsVersion: '16.x'
  appServiceStack: 'NODE|16-lts'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeJsVersion)'
      displayName: 'Install Node.js'

    - script: |
        npm install --only=prod
        npm install ---only=dev -w @antoncodes/server
      displayName: 'npm install'
    
    - script: |
        npm run test:ci -ws --if-present
      displayName: 'npm run test:ci'
    
    - script: |
        npm run build -ws --if-present
      displayName: 'npm run build'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/apps/server'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: server

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: $(webAppName)'
            inputs:
              azureSubscription: $(SUBSCRIPTION_UUID)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: $(appServiceStack)
              package: $(Pipeline.Workspace)/server/$(Build.BuildId).zip
              startUpCommand: 'npm run start:ci'